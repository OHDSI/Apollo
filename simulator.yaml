system:
  # Maximum number of CPU cores to use:
  max_cores: 10

  # Path where the data will be written:
  root_folder: d:/GPM_Sim


pretraining data generation:
  # Should pretraining data be generated? Will be written to a 'pretraining' subfolder of the root folder.
  generate_pretraining_data: yes
  
  # Number of data partitions to simulate:
  partition_count: 50
  
  # Total number of persons to simulate:
  person_count: 10000


prediction data generation:
  # Should prediction data be generated? Will be written to a 'train' and 'test' subfolder of the root folder.
  generate_prediction_data: yes
  
  # Number of prediction problems (each prediction is a separate problem). Should be equal to or less than concept_count:
  prediction_concept_count: 10
  
  # Number of data partitions to simulate:
  partition_count: 50
  
  # Number of persons to simulate for the prediction training set:
  train_person_count: 100
  
  # Number of persons to simulate for the prediction test set:
  test_person_count: 1000
  
  # Max number of days after the index date to look for outcomes:
  prediction_window: 365


simulation:
  # Simulation JSON file. Settings and all initialized values will be loaded from here if provided:
  json_file_name:
  
  # The remaining settings in this section will be ignored when a simulation JSON file is provided.
  
  # Number of (hidden) dynamic states:
  dynamic_state_count: 10
  
  # Number of (hidden) fixed states (excluding age and sex):
  fixed_state_count: 5
  
  # Number of concepts:
  concept_count: 100
  
  # Number of concepts that are serious (i.e. can lead to hospitalization when occurring as admission reason):
  serious_concept_count: 10
  
  # Number of times concept probabilities are resampled when a visit occurs (to simulate greater chance of detection
  # when interacting with the healthcare system):
  visit_multiplier: 4
  
  # Number of days to simulate per person:
  days_to_simulate: 730


debug:
  # For debugging only: simulate a small part of the data, and profile performance:
  profile: no
  
  # Log verbosity (0: quiet, 1: detailed, 2: obsessive):
  log_verbosity: 0
